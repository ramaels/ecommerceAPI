{
  "openapi": "3.0.0",
  "info": {
    "title": "E-commerce API",
    "description": "API documentation for the E-commerce platform.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "description": "User registration data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["username", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User login",
        "tags": ["Auth"],
        "requestBody": {
          "description": "User login data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Unauthorized error"
          }
        }
      }
    },
    "/refresh-token": {
      "post": {
        "summary": "Refresh user tokens",
        "tags": ["Auth"],
        "requestBody": {
          "description": "Token refresh",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": { "type": "string" }
                },
                "required": ["token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully"
          },
          "403": {
            "description": "Forbidden error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all products",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Search by product name or description"
          },
          {
            "name": "category",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by category"
          },
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer" },
            "description": "Page number for pagination"
          },
          {
            "name": "size",
            "in": "query",
            "schema": { "type": "integer" },
            "description": "Number of products per page"
          }
        ],
        "responses": {
          "200": { "description": "List of products" }
        }
      },
      "post": {
        "summary": "Create a new product",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Product data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number" },
                  "category_id": { "type": "integer" }
                },
                "required": ["name", "description", "price", "category_id"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Product created" },
          "403": { "description": "Unauthorized error" }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "tags": ["Products"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Product details" },
          "404": { "description": "Product not found" }
        }
      },
      "put": {
        "summary": "Update a product",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "description": "Updated product data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number" },
                  "category_id": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Product updated successfully" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Product deleted successfully" },
          "404": { "description": "Product not found" }
        }
      }
    },
    "/categories": {
      "get": {
        "summary": "Get all categories",
        "tags": ["Categories"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of categories" }
        }
      },
      "post": {
        "summary": "Create a new category",
        "tags": ["Categories"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Category data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["name", "description"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Category created" },
          "400": { "description": "Validation error" }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "summary": "Get category by ID",
        "tags": ["Categories"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Category details" },
          "404": { "description": "Category not found" }
        }
      },
      "put": {
        "summary": "Update a category",
        "tags": ["Categories"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "description": "Updated category data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Category updated successfully" },
          "404": { "description": "Category not found" }
        }
      },
      "delete": {
        "summary": "Delete a category",
        "tags": ["Categories"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Category deleted successfully" },
          "404": { "description": "Category not found" }
        }
      }
    },
    "/checkout": {
      "post": {
        "summary": "Checkout and create an order",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Checkout data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cart_id": { "type": "integer" },
                  "coupon_code": { "type": "string" },
                  "cart_total": { "type": "number" }
                },
                "required": ["cart_id", "cart_total"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Checkout successful, order created" },
          "400": { "description": "Validation error, e.g., empty cart or invalid coupon" },
          "500": { "description": "Server error during checkout" }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Get all orders for the logged-in user",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of orders" },
          "404": { "description": "No orders found" }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Get an order by ID",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Order details" },
          "404": { "description": "Order not found" }
        }
      },
      "delete": {
        "summary": "Cancel an order",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Order canceled successfully" },
          "404": { "description": "Order not found" }
        }
      }
    },
    "/coupons": {
      "post": {
        "summary": "Create a new coupon",
        "tags": ["Coupons"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Coupon data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": { "type": "string" },
                  "discount_type": { "type": "string" },
                  "discount_value": { "type": "number" },
                  "expiration_date": { "type": "string", "format": "date-time" },
                  "minimum_order_value": { "type": "number" },
                  "usage_limit": { "type": "integer" }
                },
                "required": ["code", "discount_type", "discount_value"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Coupon created successfully" },
          "400": { "description": "Validation error" }
        }
      }
    },
    "/coupons/{id}": {
      "put": {
        "summary": "Update a coupon",
        "tags": ["Coupons"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "description": "Updated coupon data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": { "type": "string" },
                  "discount_type": { "type": "string" },
                  "discount_value": { "type": "number" },
                  "expiration_date": { "type": "string", "format": "date-time" },
                  "minimum_order_value": { "type": "number" },
                  "usage_limit": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Coupon updated successfully" },
          "404": { "description": "Coupon not found" }
        }
      },
      "delete": {
        "summary": "Delete a coupon",
        "tags": ["Coupons"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Coupon deleted successfully" },
          "404": { "description": "Coupon not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
